name: Regression checking

on:
  workflow_dispatch:
    inputs:
      benchmarks:
        description: '--benchmarks (defaults to "")'
        required: false
        default: ""
      diff-cutoff-percent:
        description: '--diff-cutoff-percent (defaults to 100)'
        required: false
        default: 100

jobs:
  check-regressions:
    env:
      BENCH_SH: bin/bench.sh
      BENCHMARKS: ${{ github.event.inputs.benchmarks }}
      DIFF_CUTOFF_PERCENT: ${{ github.event.inputs.diff-cutoff-percent }}

    runs-on: ubuntu-latest

    steps:

    - name: Setup haskell
      uses: actions/setup-haskell@v1
      with:
        ghc-version: 8.8.3
        cabal-version: 3.2

    # -----------------------------------------------------------------
    # -- Generate reports for the base branch and upload
    # -----------------------------------------------------------------

    - name: Checkout the base branch
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Run benchmarks
      run: |
        chmod +x $BENCH_SH
        $BENCH_SH --benchmarks "$BENCHMARKS" --quick

    # -----------------------------------------------------------------
    # -- Download, generate reports for the current branch and append
    # -----------------------------------------------------------------

    - name: Checkout the current branch
      uses: actions/checkout@v2
      with:
        clean: false

    - name: Run benchmarks and append
      run: |
        chmod +x $BENCH_SH
        $BENCH_SH --benchmarks "$BENCHMARKS" --quick --append

    # -----------------------------------------------------------------
    # -- Compare
    # -----------------------------------------------------------------

    - name: Compare benchmarks
      run: |
        chmod +x $BENCH_SH
        $BENCH_SH --benchmarks "$BENCHMARKS" \
                  --fields cputime \
                  --no-measure \
                  --silent --quick --append \
                  --diff-cutoff-percent $DIFF_CUTOFF_PERCENT \
            | grep -v '^$'
